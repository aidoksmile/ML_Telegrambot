from flask import Flask
import threading
import main
import logging

app = Flask(__name__)
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler(), logging.FileHandler('bot.log')]
)

bot_running = False
bot_thread = None

@app.route("/")
def start_bot():
    global bot_running, bot_thread
    app.logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ /")

    if bot_running:
        app.logger.info("–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
        return "üöÄ –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!", 200

    def run_bot():
        try:
            app.logger.info("–ó–∞–ø—É—Å–∫ main.main()")
            main.main()
        except Exception as e:
            app.logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")

    bot_thread = threading.Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()
    bot_running = True
    app.logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ")
    return "üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ!", 200

@app.route("/status")
def check_status():
    if bot_running and bot_thread.is_alive():
        return "üöÄ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200
    else:
        return "‚ö†Ô∏è –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è!", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000, debug=True)
