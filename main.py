import logging
import model
import config
import requests
import time
from datetime import datetime

logging.basicConfig(
    filename="bot.log",
    level=logging.DEBUG,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def send_telegram_message(message):
    try:
        url = f"https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": config.TELEGRAM_CHAT_ID,
            "text": message
        }
        response = requests.post(url, json=payload)
        response.raise_for_status()
        logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {message}")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

def process_assets():
    logging.info("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–∫—Ç–∏–≤–æ–≤")
    for symbol in config.ASSETS:
        try:
            logging.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞: {symbol}")
            df = model.fetch_data(symbol)
            X, y = model.prepare_features(df, config.LOOKAHEAD_DAYS)
            params = model.optimize_model_params(X, y)
            model_instance = model.train_model(X, y, params)
            
            latest_data = X.iloc[-1].values.reshape(1, -1)
            prediction = model_instance.predict(latest_data)[0]
            probability = model_instance.predict_proba(latest_data)[0][prediction]
            
            direction = "–≤–≤–µ—Ä—Ö" if prediction == 1 else "–≤–Ω–∏–∑"
            message = (
                f"üìä –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è {symbol} ({datetime.now().strftime('%Y-%m-%d %H:%M:%S')}):\n"
                f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}\n"
                f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {probability:.2%}\n"
                f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {df['close'].iloc[-1]:.4f}"
            )
            send_telegram_message(message)
            logging.info(f"–ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è {symbol} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        except Exception as e:
            error_message = f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {symbol}: {e}"
            logging.error(error_message)
            send_telegram_message(error_message)

if __name__ == "__main__":
    process_assets()
